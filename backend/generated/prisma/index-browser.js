
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CaucScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  uf: 'uf',
  nome_cauc: 'nome_cauc',
  regiao: 'regiao',
  populacao: 'populacao',
  campo_1_1: 'campo_1_1',
  campo_1_2: 'campo_1_2',
  campo_1_3: 'campo_1_3',
  campo_1_4: 'campo_1_4',
  campo_1_5: 'campo_1_5',
  campo_2_1_1: 'campo_2_1_1',
  campo_2_1_2: 'campo_2_1_2',
  campo_3_1_1: 'campo_3_1_1',
  campo_3_1_2: 'campo_3_1_2',
  campo_3_2_1: 'campo_3_2_1',
  campo_3_2_2: 'campo_3_2_2',
  campo_3_2_3: 'campo_3_2_3',
  campo_3_3: 'campo_3_3',
  campo_3_4_1: 'campo_3_4_1',
  campo_3_4_2: 'campo_3_4_2',
  campo_3_5: 'campo_3_5',
  campo_3_6: 'campo_3_6',
  campo_3_7: 'campo_3_7',
  campo_4_1: 'campo_4_1',
  campo_4_2: 'campo_4_2',
  campo_5_1: 'campo_5_1',
  campo_5_2: 'campo_5_2',
  campo_5_3: 'campo_5_3',
  campo_5_4: 'campo_5_4',
  campo_5_5: 'campo_5_5',
  campo_5_6: 'campo_5_6',
  campo_5_7: 'campo_5_7'
};

exports.Prisma.Cidade_brasilScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  nome: 'nome',
  estado_sigla: 'estado_sigla'
};

exports.Prisma.Data_sourcesScalarFieldEnum = {
  file_base: 'file_base',
  file_name: 'file_name',
  link: 'link',
  file_type: 'file_type',
  updated_at: 'updated_at',
  last_checked: 'last_checked'
};

exports.Prisma.DespesasScalarFieldEnum = {
  id: 'id',
  despesas: 'despesas',
  conta: 'conta'
};

exports.Prisma.FinbraScalarFieldEnum = {
  id: 'id',
  cod_ibge: 'cod_ibge',
  uf: 'uf',
  populacao: 'populacao',
  coluna: 'coluna',
  despesa: 'despesa',
  conta: 'conta',
  identificador: 'identificador',
  valor: 'valor',
  fonte: 'fonte'
};

exports.Prisma.GabaritoScalarFieldEnum = {
  id: 'id',
  despesas: 'despesas',
  conta: 'conta'
};

exports.Prisma.Grupos_municipiosScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  populacao: 'populacao',
  pib: 'pib',
  pib_per_capita: 'pib_per_capita',
  categoria_populacao: 'categoria_populacao',
  categoria_pib: 'categoria_pib',
  grupo: 'grupo',
  capital: 'capital'
};

exports.Prisma.Ibge_localidadesScalarFieldEnum = {
  id: 'id',
  cod_ibge: 'cod_ibge',
  nome: 'nome',
  microrregiao: 'microrregiao',
  mesorregiao: 'mesorregiao',
  UF_sigla: 'UF_sigla',
  UF_nome: 'UF_nome',
  regiao: 'regiao',
  regiao_imediata_id: 'regiao_imediata_id',
  regiao_imediata: 'regiao_imediata'
};

exports.Prisma.Ibge_pibScalarFieldEnum = {
  id: 'id',
  cod_ibge: 'cod_ibge',
  nivel: 'nivel',
  nome: 'nome',
  pib: 'pib',
  ano: 'ano'
};

exports.Prisma.Ibge_populacaoScalarFieldEnum = {
  id: 'id',
  cod_ibge: 'cod_ibge',
  nivel: 'nivel',
  nome: 'nome',
  populacao: 'populacao'
};

exports.Prisma.Indicator_validation_logScalarFieldEnum = {
  id: 'id',
  cod_ibge: 'cod_ibge',
  municipio_ibge: 'municipio_ibge',
  municipio_igm: 'municipio_igm',
  municipio_cid_br: 'municipio_cid_br',
  link_cidade_brasil: 'link_cidade_brasil',
  site_oficial: 'site_oficial',
  telefone: 'telefone',
  email: 'email',
  administracao: 'administracao',
  partido_adm: 'partido_adm',
  cod_postal: 'cod_postal',
  scrape_log: 'scrape_log',
  scrape_status: 'scrape_status',
  last_updated: 'last_updated'
};

exports.Prisma.Legenda_caucScalarFieldEnum = {
  id: 'id',
  codigo_item: 'codigo_item',
  exigencia: 'exigencia'
};

exports.Prisma.Lei_geralScalarFieldEnum = {
  id: 'id',
  cod_ibge: 'cod_ibge',
  sigla: 'sigla',
  municipio: 'municipio',
  uso_do_poder_de_compra: 'uso_do_poder_de_compra',
  desburocratiza_o: 'desburocratiza_o',
  empreendedor_individual: 'empreendedor_individual',
  agente_de_desenvolvimento: 'agente_de_desenvolvimento',
  atores_desenvolvimento: 'atores_desenvolvimento',
  compras_publicas: 'compras_publicas',
  rede_simples: 'rede_simples',
  sala_do_empreendedor: 'sala_do_empreendedor',
  rede_simples_2: 'rede_simples_2'
};

exports.Prisma.MetasScalarFieldEnum = {
  grupo: 'grupo',
  indicador: 'indicador',
  valor_meta: 'valor_meta',
  data_calculo: 'data_calculo'
};

exports.Prisma.Nomes_dataprevScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  nome_dataprev: 'nome_dataprev',
  UF: 'UF'
};

exports.Prisma.Nomes_municipiosScalarFieldEnum = {
  id: 'id',
  cod_ibge: 'cod_ibge',
  municipio: 'municipio',
  nome_igm: 'nome_igm',
  estado: 'estado',
  regiao: 'regiao',
  capital: 'capital',
  cluster: 'cluster',
  populacao: 'populacao',
  area_territorial: 'area_territorial',
  pib_per_capita: 'pib_per_capita',
  igm_2024: 'igm_2024',
  link_cidade_brasil: 'link_cidade_brasil',
  municipio_cidade_brasil: 'municipio_cidade_brasil',
  site_oficial: 'site_oficial',
  resultado_cidade_brasil: 'resultado_cidade_brasil',
  planejamento_site: 'planejamento_site',
  planejamento_campo: 'planejamento_campo',
  planejamento_resultado: 'planejamento_resultado',
  evidencia: 'evidencia'
};

exports.Prisma.Nomes_municipios_igmScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  nome: 'nome',
  estado_sigla: 'estado_sigla'
};

exports.Prisma.Nomes_municipios_sebraeScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  nome_ibge: 'nome_ibge',
  nome_sebrae: 'nome_sebrae',
  estado: 'estado'
};

exports.Prisma.Nomes_municipios_tabnetScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  cod: 'cod',
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  municipio_tabnet: 'municipio_tabnet',
  nome_tabnet: 'nome_tabnet'
};

exports.Prisma.OutliersScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  grupo: 'grupo',
  indicador: 'indicador',
  is_outlier: 'is_outlier',
  data_calculo: 'data_calculo'
};

exports.Prisma.Pib_municipiosScalarFieldEnum = {
  id: 'id',
  ano: 'ano',
  cod_ibge: 'cod_ibge',
  pib: 'pib',
  pib_per_capita: 'pib_per_capita'
};

exports.Prisma.Proc_logsScalarFieldEnum = {
  id: 'id',
  procedure_name: 'procedure_name',
  message: 'message',
  created_at: 'created_at'
};

exports.Prisma.Processing_logsScalarFieldEnum = {
  id: 'id',
  indicador: 'indicador',
  etapa: 'etapa',
  registros: 'registros',
  inicio: 'inicio',
  fim: 'fim'
};

exports.Prisma.Scraper_planejamentoScalarFieldEnum = {
  id: 'id',
  cod_ibge: 'cod_ibge',
  municipio_nome: 'municipio_nome',
  link: 'link',
  planejamento_site: 'planejamento_site',
  planejamento_campo: 'planejamento_campo',
  planejamento_resultado: 'planejamento_resultado',
  evidencia: 'evidencia',
  evidencia_link: 'evidencia_link',
  scrape_log: 'scrape_log',
  scrape_status: 'scrape_status',
  last_updated: 'last_updated'
};

exports.Prisma.UnaScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  data_atualizacao: 'data_atualizacao',
  fiscal_autonomia_bruto: 'fiscal_autonomia_bruto',
  fiscal_autonomia_nota: 'fiscal_autonomia_nota',
  fiscal_investimento_bruto: 'fiscal_investimento_bruto',
  fiscal_investimento_nota: 'fiscal_investimento_nota',
  fiscal_liquidez_bruto: 'fiscal_liquidez_bruto',
  fiscal_liquidez_nota: 'fiscal_liquidez_nota',
  fiscal_gasto_pessoal_bruto: 'fiscal_gasto_pessoal_bruto',
  fiscal_gasto_pessoal_nota: 'fiscal_gasto_pessoal_nota',
  investimento_saude_bruto: 'investimento_saude_bruto',
  investimento_saude_nota: 'investimento_saude_nota',
  investimento_educacao_bruto: 'investimento_educacao_bruto',
  investimento_educacao_nota: 'investimento_educacao_nota',
  custo_legislativo_bruto: 'custo_legislativo_bruto',
  custo_legislativo_nota: 'custo_legislativo_nota',
  equilibrio_previdenciario_bruto: 'equilibrio_previdenciario_bruto',
  equilibrio_previdenciario_nota: 'equilibrio_previdenciario_nota',
  planejamento_despesa_bruto: 'planejamento_despesa_bruto',
  planejamento_despesa_nota: 'planejamento_despesa_nota',
  planejamento_captacao_bruto: 'planejamento_captacao_bruto',
  planejamento_captacao_nota: 'planejamento_captacao_nota',
  planejamento_lei_geral_bruto: 'planejamento_lei_geral_bruto',
  planejamento_lei_geral_nota: 'planejamento_lei_geral_nota',
  colaboradores_servidores_bruto: 'colaboradores_servidores_bruto',
  colaboradores_servidores_nota: 'colaboradores_servidores_nota',
  colaboradores_comissionados_bruto: 'colaboradores_comissionados_bruto',
  colaboradores_comissionados_nota: 'colaboradores_comissionados_nota',
  transparencia_disponibilidade_bruto: 'transparencia_disponibilidade_bruto',
  transparencia_disponibilidade_nota: 'transparencia_disponibilidade_nota',
  transparencia_cauc_bruto: 'transparencia_cauc_bruto',
  transparencia_cauc_nota: 'transparencia_cauc_nota',
  transparencia_indice_bruto: 'transparencia_indice_bruto',
  transparencia_indice_nota: 'transparencia_indice_nota',
  saude_mortalidade_bruto: 'saude_mortalidade_bruto',
  saude_mortalidade_nota: 'saude_mortalidade_nota',
  saude_cobertura_bruto: 'saude_cobertura_bruto',
  saude_cobertura_nota: 'saude_cobertura_nota',
  saude_vacina_bruto: 'saude_vacina_bruto',
  saude_vacina_nota: 'saude_vacina_nota',
  educacao_abandono_bruto: 'educacao_abandono_bruto',
  educacao_abandono_nota: 'educacao_abandono_nota',
  educacao_ideb_anos_iniciais_bruto: 'educacao_ideb_anos_iniciais_bruto',
  educacao_ideb_anos_iniciais_nota: 'educacao_ideb_anos_iniciais_nota',
  educacao_ideb_anos_finais_bruto: 'educacao_ideb_anos_finais_bruto',
  educacao_ideb_anos_finais_nota: 'educacao_ideb_anos_finais_nota',
  educacao_taxa_distorcao_bruto: 'educacao_taxa_distorcao_bruto',
  educacao_taxa_distorcao_nota: 'educacao_taxa_distorcao_nota',
  educacao_creches_bruto: 'educacao_creches_bruto',
  educacao_creches_nota: 'educacao_creches_nota',
  seguranca_homicidio_bruto: 'seguranca_homicidio_bruto',
  seguranca_homicidio_nota: 'seguranca_homicidio_nota',
  seguranca_transito_bruto: 'seguranca_transito_bruto',
  seguranca_transito_nota: 'seguranca_transito_nota',
  saneamento_acesso_agua_bruto: 'saneamento_acesso_agua_bruto',
  saneamento_acesso_agua_nota: 'saneamento_acesso_agua_nota',
  saneamento_coleta_esgoto_bruto: 'saneamento_coleta_esgoto_bruto',
  saneamento_coleta_esgoto_nota: 'saneamento_coleta_esgoto_nota',
  saneamento_tratamento_esgoto_bruto: 'saneamento_tratamento_esgoto_bruto',
  saneamento_tratamento_esgoto_nota: 'saneamento_tratamento_esgoto_nota',
  vulnerabilidade_social_bruto: 'vulnerabilidade_social_bruto',
  vulnerabilidade_social_nota: 'vulnerabilidade_social_nota',
  indicador_fiscal: 'indicador_fiscal',
  indicador_investimento_per_capita: 'indicador_investimento_per_capita',
  indicador_custo_legislativo: 'indicador_custo_legislativo',
  indicador_equilibrio_previdenciario: 'indicador_equilibrio_previdenciario',
  indicador_planejamento: 'indicador_planejamento',
  indicador_colaboradores: 'indicador_colaboradores',
  indicador_transparencia: 'indicador_transparencia',
  indicador_saude: 'indicador_saude',
  indicador_educacao: 'indicador_educacao',
  indicador_seguranca: 'indicador_seguranca',
  indicador_saneamento_meio_ambiente: 'indicador_saneamento_meio_ambiente',
  indicador_vulnerabilidade_social: 'indicador_vulnerabilidade_social',
  dimensao_financas: 'dimensao_financas',
  dimensao_gestao: 'dimensao_gestao',
  dimensao_desempenho: 'dimensao_desempenho',
  nota_final: 'nota_final'
};

exports.Prisma.Una_coladaScalarFieldEnum = {
  ano: 'ano',
  codigo_municipio: 'codigo_municipio',
  cod_ibge: 'cod_ibge',
  nome: 'nome',
  municipio_uf_conc: 'municipio_uf_conc',
  nome_igm: 'nome_igm',
  nome_igm_uf_conc: 'nome_igm_uf_conc',
  estado_sigla: 'estado_sigla',
  regiao: 'regiao',
  nome_uf: 'nome_uf',
  microregiao: 'microregiao',
  mesorregiao: 'mesorregiao',
  regiao_imediata: 'regiao_imediata',
  capital: 'capital',
  cluster: 'cluster',
  populacao: 'populacao',
  populacao_fonte: 'populacao_fonte',
  area_territorial: 'area_territorial',
  area_territorial_fonte: 'area_territorial_fonte',
  pib_per_capita: 'pib_per_capita',
  pib_per_capita_fonte: 'pib_per_capita_fonte',
  pib_precos_correntes: 'pib_precos_correntes',
  pib_precos_correntes_fonte: 'pib_precos_correntes_fonte',
  fiscal_autonomia_bruto: 'fiscal_autonomia_bruto',
  fiscal_autonomia_nota: 'fiscal_autonomia_nota',
  fiscal_autonomia_outlier: 'fiscal_autonomia_outlier',
  fiscal_autonomia_meta: 'fiscal_autonomia_meta',
  fiscal_autonomia_fonte: 'fiscal_autonomia_fonte',
  fiscal_investimento_bruto: 'fiscal_investimento_bruto',
  fiscal_investimento_nota: 'fiscal_investimento_nota',
  fiscal_investimento_outlier: 'fiscal_investimento_outlier',
  fiscal_investimento_meta: 'fiscal_investimento_meta',
  fiscal_investimento_fonte: 'fiscal_investimento_fonte',
  fiscal_liquidez_bruto: 'fiscal_liquidez_bruto',
  fiscal_liquidez_nota: 'fiscal_liquidez_nota',
  fiscal_liquidez_outlier: 'fiscal_liquidez_outlier',
  fiscal_liquidez_meta: 'fiscal_liquidez_meta',
  fiscal_liquidez_fonte: 'fiscal_liquidez_fonte',
  fiscal_gasto_pessoal_bruto: 'fiscal_gasto_pessoal_bruto',
  fiscal_gasto_pessoal_nota: 'fiscal_gasto_pessoal_nota',
  fiscal_gasto_pessoal_outlier: 'fiscal_gasto_pessoal_outlier',
  fiscal_gasto_pessoal_meta: 'fiscal_gasto_pessoal_meta',
  fiscal_gasto_pessoal_fonte: 'fiscal_gasto_pessoal_fonte',
  investimento_saude_bruto: 'investimento_saude_bruto',
  investimento_saude_nota: 'investimento_saude_nota',
  investimento_saude_outlier: 'investimento_saude_outlier',
  investimento_saude_meta: 'investimento_saude_meta',
  investimento_saude_fonte: 'investimento_saude_fonte',
  investimento_educacao_bruto: 'investimento_educacao_bruto',
  investimento_educacao_nota: 'investimento_educacao_nota',
  investimento_educacao_outlier: 'investimento_educacao_outlier',
  investimento_educacao_meta: 'investimento_educacao_meta',
  investimento_educacao_fonte: 'investimento_educacao_fonte',
  custo_legislativo_bruto: 'custo_legislativo_bruto',
  custo_legislativo_nota: 'custo_legislativo_nota',
  custo_legislativo_outlier: 'custo_legislativo_outlier',
  custo_legislativo_meta: 'custo_legislativo_meta',
  custo_legislativo_fonte: 'custo_legislativo_fonte',
  equilibrio_previdenciario_bruto: 'equilibrio_previdenciario_bruto',
  equilibrio_previdenciario_nota: 'equilibrio_previdenciario_nota',
  equilibrio_previdenciario_outlier: 'equilibrio_previdenciario_outlier',
  equilibrio_previdenciario_meta: 'equilibrio_previdenciario_meta',
  equilibrio_previdenciario_fonte: 'equilibrio_previdenciario_fonte',
  planejamento_despesa_bruto: 'planejamento_despesa_bruto',
  planejamento_despesa_nota: 'planejamento_despesa_nota',
  planejamento_despesa_outlier: 'planejamento_despesa_outlier',
  planejamento_despesa_meta: 'planejamento_despesa_meta',
  planejamento_despesa_fonte: 'planejamento_despesa_fonte',
  planejamento_captacao_bruto: 'planejamento_captacao_bruto',
  planejamento_captacao_nota: 'planejamento_captacao_nota',
  planejamento_captacao_outlier: 'planejamento_captacao_outlier',
  planejamento_captacao_meta: 'planejamento_captacao_meta',
  planejamento_captacao_fonte: 'planejamento_captacao_fonte',
  planejamento_lei_geral_bruto: 'planejamento_lei_geral_bruto',
  planejamento_lei_geral_nota: 'planejamento_lei_geral_nota',
  planejamento_lei_geral_outlier: 'planejamento_lei_geral_outlier',
  planejamento_lei_geral_meta: 'planejamento_lei_geral_meta',
  planejamento_lei_geral_fonte: 'planejamento_lei_geral_fonte',
  colaboradores_servidores_bruto: 'colaboradores_servidores_bruto',
  colaboradores_servidores_nota: 'colaboradores_servidores_nota',
  colaboradores_servidores_outlier: 'colaboradores_servidores_outlier',
  colaboradores_servidores_meta: 'colaboradores_servidores_meta',
  colaboradores_servidores_fonte: 'colaboradores_servidores_fonte',
  colaboradores_comissionados_bruto: 'colaboradores_comissionados_bruto',
  colaboradores_comissionados_nota: 'colaboradores_comissionados_nota',
  colaboradores_comissionados_outlier: 'colaboradores_comissionados_outlier',
  colaboradores_comissionados_meta: 'colaboradores_comissionados_meta',
  colaboradores_comissionados_fonte: 'colaboradores_comissionados_fonte',
  transparencia_disponibilidade_bruto: 'transparencia_disponibilidade_bruto',
  transparencia_disponibilidade_nota: 'transparencia_disponibilidade_nota',
  transparencia_disponibilidade_outlier: 'transparencia_disponibilidade_outlier',
  transparencia_disponibilidade_meta: 'transparencia_disponibilidade_meta',
  transparencia_disponibilidade_fonte: 'transparencia_disponibilidade_fonte',
  transparencia_cauc_bruto: 'transparencia_cauc_bruto',
  transparencia_cauc_nota: 'transparencia_cauc_nota',
  transparencia_cauc_outlier: 'transparencia_cauc_outlier',
  transparencia_cauc_meta: 'transparencia_cauc_meta',
  transparencia_cauc_fonte: 'transparencia_cauc_fonte',
  transparencia_indice_bruto: 'transparencia_indice_bruto',
  transparencia_indice_nota: 'transparencia_indice_nota',
  transparencia_indice_outlier: 'transparencia_indice_outlier',
  transparencia_indice_meta: 'transparencia_indice_meta',
  transparencia_indice_fonte: 'transparencia_indice_fonte',
  saude_mortalidade_bruto: 'saude_mortalidade_bruto',
  saude_mortalidade_nota: 'saude_mortalidade_nota',
  saude_mortalidade_outlier: 'saude_mortalidade_outlier',
  saude_mortalidade_meta: 'saude_mortalidade_meta',
  saude_mortalidade_fonte: 'saude_mortalidade_fonte',
  saude_cobertura_bruto: 'saude_cobertura_bruto',
  saude_cobertura_nota: 'saude_cobertura_nota',
  saude_cobertura_outlier: 'saude_cobertura_outlier',
  saude_cobertura_meta: 'saude_cobertura_meta',
  saude_cobertura_fonte: 'saude_cobertura_fonte',
  saude_vacina_bruto: 'saude_vacina_bruto',
  saude_vacina_nota: 'saude_vacina_nota',
  saude_vacina_outlier: 'saude_vacina_outlier',
  saude_vacina_meta: 'saude_vacina_meta',
  saude_vacina_fonte: 'saude_vacina_fonte',
  educacao_abandono_bruto: 'educacao_abandono_bruto',
  educacao_abandono_nota: 'educacao_abandono_nota',
  educacao_abandono_outlier: 'educacao_abandono_outlier',
  educacao_abandono_meta: 'educacao_abandono_meta',
  educacao_abandono_fonte: 'educacao_abandono_fonte',
  educacao_ideb_anos_iniciais_bruto: 'educacao_ideb_anos_iniciais_bruto',
  educacao_ideb_anos_iniciais_nota: 'educacao_ideb_anos_iniciais_nota',
  educacao_ideb_anos_iniciais_outlier: 'educacao_ideb_anos_iniciais_outlier',
  educacao_ideb_anos_iniciais_meta: 'educacao_ideb_anos_iniciais_meta',
  educacao_ideb_anos_iniciais_fonte: 'educacao_ideb_anos_iniciais_fonte',
  educacao_ideb_anos_finais_bruto: 'educacao_ideb_anos_finais_bruto',
  educacao_ideb_anos_finais_nota: 'educacao_ideb_anos_finais_nota',
  educacao_ideb_anos_finais_outlier: 'educacao_ideb_anos_finais_outlier',
  educacao_ideb_anos_finais_meta: 'educacao_ideb_anos_finais_meta',
  educacao_ideb_anos_finais_fonte: 'educacao_ideb_anos_finais_fonte',
  educacao_taxa_distorcao_bruto: 'educacao_taxa_distorcao_bruto',
  educacao_taxa_distorcao_nota: 'educacao_taxa_distorcao_nota',
  educacao_taxa_distorcao_outlier: 'educacao_taxa_distorcao_outlier',
  educacao_taxa_distorcao_meta: 'educacao_taxa_distorcao_meta',
  educacao_taxa_distorcao_fonte: 'educacao_taxa_distorcao_fonte',
  educacao_creches_bruto: 'educacao_creches_bruto',
  educacao_creches_nota: 'educacao_creches_nota',
  educacao_creches_outlier: 'educacao_creches_outlier',
  educacao_creches_meta: 'educacao_creches_meta',
  educacao_creches_fonte: 'educacao_creches_fonte',
  seguranca_homicidio_bruto: 'seguranca_homicidio_bruto',
  seguranca_homicidio_nota: 'seguranca_homicidio_nota',
  seguranca_homicidio_outlier: 'seguranca_homicidio_outlier',
  seguranca_homicidio_meta: 'seguranca_homicidio_meta',
  seguranca_homicidio_fonte: 'seguranca_homicidio_fonte',
  seguranca_transito_bruto: 'seguranca_transito_bruto',
  seguranca_transito_nota: 'seguranca_transito_nota',
  seguranca_transito_outlier: 'seguranca_transito_outlier',
  seguranca_transito_meta: 'seguranca_transito_meta',
  seguranca_transito_fonte: 'seguranca_transito_fonte',
  saneamento_acesso_agua_bruto: 'saneamento_acesso_agua_bruto',
  saneamento_acesso_agua_nota: 'saneamento_acesso_agua_nota',
  saneamento_acesso_agua_outlier: 'saneamento_acesso_agua_outlier',
  saneamento_acesso_agua_meta: 'saneamento_acesso_agua_meta',
  saneamento_acesso_agua_fonte: 'saneamento_acesso_agua_fonte',
  saneamento_coleta_esgoto_bruto: 'saneamento_coleta_esgoto_bruto',
  saneamento_coleta_esgoto_nota: 'saneamento_coleta_esgoto_nota',
  saneamento_coleta_esgoto_outlier: 'saneamento_coleta_esgoto_outlier',
  saneamento_coleta_esgoto_meta: 'saneamento_coleta_esgoto_meta',
  saneamento_coleta_esgoto_fonte: 'saneamento_coleta_esgoto_fonte',
  saneamento_tratamento_esgoto_bruto: 'saneamento_tratamento_esgoto_bruto',
  saneamento_tratamento_esgoto_nota: 'saneamento_tratamento_esgoto_nota',
  saneamento_tratamento_esgoto_outlier: 'saneamento_tratamento_esgoto_outlier',
  saneamento_tratamento_esgoto_meta: 'saneamento_tratamento_esgoto_meta',
  saneamento_tratamento_esgoto_fonte: 'saneamento_tratamento_esgoto_fonte',
  vulnerabilidade_social_bruto: 'vulnerabilidade_social_bruto',
  vulnerabilidade_social_nota: 'vulnerabilidade_social_nota',
  vulnerabilidade_social_outlier: 'vulnerabilidade_social_outlier',
  vulnerabilidade_social_meta: 'vulnerabilidade_social_meta',
  vulnerabilidade_social_fonte: 'vulnerabilidade_social_fonte',
  indicador_fiscal: 'indicador_fiscal',
  indicador_investimento_per_capita: 'indicador_investimento_per_capita',
  indicador_custo_legislativo: 'indicador_custo_legislativo',
  indicador_equilibrio_previdenciario: 'indicador_equilibrio_previdenciario',
  indicador_planejamento: 'indicador_planejamento',
  indicador_colaboradores: 'indicador_colaboradores',
  indicador_transparencia: 'indicador_transparencia',
  indicador_saude: 'indicador_saude',
  indicador_educacao: 'indicador_educacao',
  indicador_seguranca: 'indicador_seguranca',
  indicador_saneamento_meio_ambiente: 'indicador_saneamento_meio_ambiente',
  indicador_vulnerabilidade_social: 'indicador_vulnerabilidade_social',
  dimensao_financas: 'dimensao_financas',
  dimensao_gestao: 'dimensao_gestao',
  dimensao_desempenho: 'dimensao_desempenho',
  nota_final: 'nota_final'
};

exports.Prisma.Colaboradores_comissionadosScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  Municipio: 'Municipio',
  UF: 'UF',
  populacao: 'populacao',
  servidores: 'servidores',
  comissionados: 'comissionados',
  colaboradores_comissionados_bruto: 'colaboradores_comissionados_bruto'
};

exports.Prisma.Colaboradores_servidoresScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  Municipio: 'Municipio',
  UF: 'UF',
  populacao: 'populacao',
  servidores: 'servidores',
  comissionados: 'comissionados',
  colaboradores_servidores_bruto: 'colaboradores_servidores_bruto'
};

exports.Prisma.Custo_legislativoScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  dado_bruto: 'dado_bruto',
  custo_legislativo_bruto: 'custo_legislativo_bruto'
};

exports.Prisma.Educacao_abandonoScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  educacao_abandono_bruto: 'educacao_abandono_bruto'
};

exports.Prisma.Educacao_crechesScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  educacao_creches_bruto: 'educacao_creches_bruto'
};

exports.Prisma.Educacao_ideb_anos_finaisScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  educacao_ideb_anos_finais_bruto: 'educacao_ideb_anos_finais_bruto'
};

exports.Prisma.Educacao_ideb_anos_iniciaisScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  educacao_ideb_anos_iniciais_bruto: 'educacao_ideb_anos_iniciais_bruto'
};

exports.Prisma.Educacao_taxa_distorcaoScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  educacao_taxa_distorcao_bruto: 'educacao_taxa_distorcao_bruto'
};

exports.Prisma.Equilibrio_previdenciarioScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  nome_ibge: 'nome_ibge',
  uf_sigla: 'uf_sigla',
  equilibrio_previdenciario_bruto: 'equilibrio_previdenciario_bruto'
};

exports.Prisma.Fiscal_autonomiaScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  nome_ibge: 'nome_ibge',
  receitas_proprias: 'receitas_proprias',
  despesas_admin: 'despesas_admin',
  saldo: 'saldo',
  fiscal_autonomia_bruto: 'fiscal_autonomia_bruto'
};

exports.Prisma.Fiscal_gasto_pessoalScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  nome_ibge: 'nome_ibge',
  despesa_com_pessoal: 'despesa_com_pessoal',
  receita_corretes: 'receita_corretes',
  fiscal_gasto_pessoal_bruto: 'fiscal_gasto_pessoal_bruto'
};

exports.Prisma.Fiscal_investimentoScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  nome_ibge: 'nome_ibge',
  investimento_inversao: 'investimento_inversao',
  receita_total: 'receita_total',
  fiscal_investimento_bruto: 'fiscal_investimento_bruto'
};

exports.Prisma.Fiscal_liquidezScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  nome_ibge: 'nome_ibge',
  caixa_equivalentes: 'caixa_equivalentes',
  restos_pagar: 'restos_pagar',
  fiscal_liquidez_bruto: 'fiscal_liquidez_bruto'
};

exports.Prisma.Investimento_educacaoScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  dado_bruto: 'dado_bruto',
  investimento_educacao_bruto: 'investimento_educacao_bruto'
};

exports.Prisma.Investimento_saudeScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  dado_bruto: 'dado_bruto',
  investimento_saude_bruto: 'investimento_saude_bruto'
};

exports.Prisma.Planejamento_captacaoScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  municipio: 'municipio',
  receita_corrente: 'receita_corrente',
  transferencia_conta_1: 'transferencia_conta_1',
  transferencia_conta_2: 'transferencia_conta_2',
  receita_bruta: 'receita_bruta',
  planejamento_captacao_bruto: 'planejamento_captacao_bruto'
};

exports.Prisma.Planejamento_despesaScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  municipio: 'municipio',
  inscricao_restos: 'inscricao_restos',
  despesas_empenhadas: 'despesas_empenhadas',
  planejamento_despesa_bruto: 'planejamento_despesa_bruto'
};

exports.Prisma.Planejamento_lei_geralScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  nome_ibge: 'nome_ibge',
  planejamento_lei_geral_bruto: 'planejamento_lei_geral_bruto'
};

exports.Prisma.Saneamento_acesso_aguaScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  saneamento_acesso_agua_bruto: 'saneamento_acesso_agua_bruto'
};

exports.Prisma.Saneamento_coleta_esgotoScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  saneamento_coleta_esgoto_bruto: 'saneamento_coleta_esgoto_bruto'
};

exports.Prisma.Saneamento_tratamento_esgotoScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  populacao: 'populacao',
  saneamento_tratamento_esgoto_bruto: 'saneamento_tratamento_esgoto_bruto'
};

exports.Prisma.Saude_coberturaScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  cobertura: 'cobertura',
  saude_cobertura_bruto: 'saude_cobertura_bruto'
};

exports.Prisma.Saude_mortalidadeScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  mortalidade: 'mortalidade',
  nascimentos: 'nascimentos',
  saude_mortalidade_bruto: 'saude_mortalidade_bruto'
};

exports.Prisma.Saude_vacinaScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  saude_vacina_bruto: 'saude_vacina_bruto'
};

exports.Prisma.Seguranca_homicidioScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  dado_bruto: 'dado_bruto',
  seguranca_homicidio_bruto: 'seguranca_homicidio_bruto'
};

exports.Prisma.Seguranca_transitoScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  dado_bruto: 'dado_bruto',
  seguranca_transito_bruto: 'seguranca_transito_bruto'
};

exports.Prisma.Transparencia_caucScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  nome_ibge: 'nome_ibge',
  transparencia_cauc_bruto: 'transparencia_cauc_bruto'
};

exports.Prisma.Transparencia_indiceScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  nome_ibge: 'nome_ibge',
  transparencia_indice_bruto: 'transparencia_indice_bruto'
};

exports.Prisma.Vulnerabilidade_socialScalarFieldEnum = {
  cod_ibge: 'cod_ibge',
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  vulnerabilidade_social_bruto: 'vulnerabilidade_social_bruto',
  quantidade: 'quantidade'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.caucOrderByRelevanceFieldEnum = {
  uf: 'uf',
  nome_cauc: 'nome_cauc',
  regiao: 'regiao',
  campo_1_1: 'campo_1_1',
  campo_1_2: 'campo_1_2',
  campo_1_3: 'campo_1_3',
  campo_1_4: 'campo_1_4',
  campo_1_5: 'campo_1_5',
  campo_2_1_1: 'campo_2_1_1',
  campo_2_1_2: 'campo_2_1_2',
  campo_3_1_1: 'campo_3_1_1',
  campo_3_1_2: 'campo_3_1_2',
  campo_3_2_1: 'campo_3_2_1',
  campo_3_2_2: 'campo_3_2_2',
  campo_3_2_3: 'campo_3_2_3',
  campo_3_3: 'campo_3_3',
  campo_3_4_1: 'campo_3_4_1',
  campo_3_4_2: 'campo_3_4_2',
  campo_3_5: 'campo_3_5',
  campo_3_6: 'campo_3_6',
  campo_3_7: 'campo_3_7',
  campo_4_1: 'campo_4_1',
  campo_4_2: 'campo_4_2',
  campo_5_1: 'campo_5_1',
  campo_5_2: 'campo_5_2',
  campo_5_3: 'campo_5_3',
  campo_5_4: 'campo_5_4',
  campo_5_5: 'campo_5_5',
  campo_5_6: 'campo_5_6',
  campo_5_7: 'campo_5_7'
};

exports.Prisma.cidade_brasilOrderByRelevanceFieldEnum = {
  nome: 'nome',
  estado_sigla: 'estado_sigla'
};

exports.Prisma.data_sourcesOrderByRelevanceFieldEnum = {
  file_base: 'file_base',
  file_name: 'file_name',
  link: 'link',
  file_type: 'file_type'
};

exports.Prisma.despesasOrderByRelevanceFieldEnum = {
  despesas: 'despesas',
  conta: 'conta'
};

exports.Prisma.finbraOrderByRelevanceFieldEnum = {
  uf: 'uf',
  coluna: 'coluna',
  despesa: 'despesa',
  conta: 'conta',
  identificador: 'identificador',
  valor: 'valor',
  fonte: 'fonte'
};

exports.Prisma.gabaritoOrderByRelevanceFieldEnum = {
  despesas: 'despesas',
  conta: 'conta'
};

exports.Prisma.ibge_localidadesOrderByRelevanceFieldEnum = {
  nome: 'nome',
  microrregiao: 'microrregiao',
  mesorregiao: 'mesorregiao',
  UF_sigla: 'UF_sigla',
  UF_nome: 'UF_nome',
  regiao: 'regiao',
  regiao_imediata: 'regiao_imediata'
};

exports.Prisma.ibge_pibOrderByRelevanceFieldEnum = {
  cod_ibge: 'cod_ibge',
  nivel: 'nivel',
  nome: 'nome',
  ano: 'ano'
};

exports.Prisma.ibge_populacaoOrderByRelevanceFieldEnum = {
  cod_ibge: 'cod_ibge',
  nivel: 'nivel',
  nome: 'nome'
};

exports.Prisma.indicator_validation_logOrderByRelevanceFieldEnum = {
  municipio_ibge: 'municipio_ibge',
  municipio_igm: 'municipio_igm',
  municipio_cid_br: 'municipio_cid_br',
  link_cidade_brasil: 'link_cidade_brasil',
  site_oficial: 'site_oficial',
  telefone: 'telefone',
  email: 'email',
  administracao: 'administracao',
  partido_adm: 'partido_adm',
  cod_postal: 'cod_postal',
  scrape_log: 'scrape_log',
  scrape_status: 'scrape_status'
};

exports.Prisma.legenda_caucOrderByRelevanceFieldEnum = {
  codigo_item: 'codigo_item',
  exigencia: 'exigencia'
};

exports.Prisma.lei_geralOrderByRelevanceFieldEnum = {
  cod_ibge: 'cod_ibge',
  sigla: 'sigla',
  municipio: 'municipio'
};

exports.Prisma.metasOrderByRelevanceFieldEnum = {
  indicador: 'indicador'
};

exports.Prisma.nomes_dataprevOrderByRelevanceFieldEnum = {
  nome_dataprev: 'nome_dataprev',
  UF: 'UF'
};

exports.Prisma.nomes_municipiosOrderByRelevanceFieldEnum = {
  municipio: 'municipio',
  nome_igm: 'nome_igm',
  estado: 'estado',
  regiao: 'regiao',
  capital: 'capital',
  cluster: 'cluster',
  link_cidade_brasil: 'link_cidade_brasil',
  municipio_cidade_brasil: 'municipio_cidade_brasil',
  site_oficial: 'site_oficial',
  resultado_cidade_brasil: 'resultado_cidade_brasil',
  planejamento_site: 'planejamento_site',
  planejamento_campo: 'planejamento_campo',
  planejamento_resultado: 'planejamento_resultado',
  evidencia: 'evidencia'
};

exports.Prisma.nomes_municipios_igmOrderByRelevanceFieldEnum = {
  nome: 'nome',
  estado_sigla: 'estado_sigla'
};

exports.Prisma.nomes_municipios_sebraeOrderByRelevanceFieldEnum = {
  cod_ibge: 'cod_ibge',
  nome_ibge: 'nome_ibge',
  nome_sebrae: 'nome_sebrae',
  estado: 'estado'
};

exports.Prisma.nomes_municipios_tabnetOrderByRelevanceFieldEnum = {
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  municipio_tabnet: 'municipio_tabnet',
  nome_tabnet: 'nome_tabnet'
};

exports.Prisma.outliersOrderByRelevanceFieldEnum = {
  indicador: 'indicador'
};

exports.Prisma.pib_municipiosOrderByRelevanceFieldEnum = {
  ano: 'ano',
  cod_ibge: 'cod_ibge'
};

exports.Prisma.proc_logsOrderByRelevanceFieldEnum = {
  procedure_name: 'procedure_name',
  message: 'message'
};

exports.Prisma.processing_logsOrderByRelevanceFieldEnum = {
  indicador: 'indicador',
  etapa: 'etapa'
};

exports.Prisma.scraper_planejamentoOrderByRelevanceFieldEnum = {
  municipio_nome: 'municipio_nome',
  link: 'link',
  planejamento_site: 'planejamento_site',
  planejamento_campo: 'planejamento_campo',
  planejamento_resultado: 'planejamento_resultado',
  evidencia: 'evidencia',
  evidencia_link: 'evidencia_link',
  scrape_log: 'scrape_log',
  scrape_status: 'scrape_status'
};

exports.Prisma.una_coladaOrderByRelevanceFieldEnum = {
  nome: 'nome',
  municipio_uf_conc: 'municipio_uf_conc',
  nome_igm: 'nome_igm',
  nome_igm_uf_conc: 'nome_igm_uf_conc',
  estado_sigla: 'estado_sigla',
  regiao: 'regiao',
  nome_uf: 'nome_uf',
  microregiao: 'microregiao',
  mesorregiao: 'mesorregiao',
  regiao_imediata: 'regiao_imediata',
  capital: 'capital',
  populacao_fonte: 'populacao_fonte',
  area_territorial_fonte: 'area_territorial_fonte',
  pib_per_capita_fonte: 'pib_per_capita_fonte',
  pib_precos_correntes_fonte: 'pib_precos_correntes_fonte',
  fiscal_autonomia_fonte: 'fiscal_autonomia_fonte',
  fiscal_investimento_fonte: 'fiscal_investimento_fonte',
  fiscal_liquidez_fonte: 'fiscal_liquidez_fonte',
  fiscal_gasto_pessoal_fonte: 'fiscal_gasto_pessoal_fonte',
  investimento_saude_fonte: 'investimento_saude_fonte',
  investimento_educacao_fonte: 'investimento_educacao_fonte',
  custo_legislativo_fonte: 'custo_legislativo_fonte',
  equilibrio_previdenciario_fonte: 'equilibrio_previdenciario_fonte',
  planejamento_despesa_fonte: 'planejamento_despesa_fonte',
  planejamento_captacao_fonte: 'planejamento_captacao_fonte',
  planejamento_lei_geral_fonte: 'planejamento_lei_geral_fonte',
  colaboradores_servidores_fonte: 'colaboradores_servidores_fonte',
  colaboradores_comissionados_fonte: 'colaboradores_comissionados_fonte',
  transparencia_disponibilidade_fonte: 'transparencia_disponibilidade_fonte',
  transparencia_cauc_fonte: 'transparencia_cauc_fonte',
  transparencia_indice_fonte: 'transparencia_indice_fonte',
  saude_mortalidade_fonte: 'saude_mortalidade_fonte',
  saude_cobertura_fonte: 'saude_cobertura_fonte',
  saude_vacina_fonte: 'saude_vacina_fonte',
  educacao_abandono_fonte: 'educacao_abandono_fonte',
  educacao_ideb_anos_iniciais_fonte: 'educacao_ideb_anos_iniciais_fonte',
  educacao_ideb_anos_finais_fonte: 'educacao_ideb_anos_finais_fonte',
  educacao_taxa_distorcao_fonte: 'educacao_taxa_distorcao_fonte',
  educacao_creches_fonte: 'educacao_creches_fonte',
  seguranca_homicidio_fonte: 'seguranca_homicidio_fonte',
  seguranca_transito_fonte: 'seguranca_transito_fonte',
  saneamento_acesso_agua_fonte: 'saneamento_acesso_agua_fonte',
  saneamento_coleta_esgoto_fonte: 'saneamento_coleta_esgoto_fonte',
  saneamento_tratamento_esgoto_fonte: 'saneamento_tratamento_esgoto_fonte',
  vulnerabilidade_social_fonte: 'vulnerabilidade_social_fonte'
};

exports.Prisma.colaboradores_comissionadosOrderByRelevanceFieldEnum = {
  Municipio: 'Municipio',
  UF: 'UF'
};

exports.Prisma.colaboradores_servidoresOrderByRelevanceFieldEnum = {
  Municipio: 'Municipio',
  UF: 'UF'
};

exports.Prisma.educacao_abandonoOrderByRelevanceFieldEnum = {
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge'
};

exports.Prisma.educacao_crechesOrderByRelevanceFieldEnum = {
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge'
};

exports.Prisma.educacao_ideb_anos_finaisOrderByRelevanceFieldEnum = {
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge'
};

exports.Prisma.educacao_ideb_anos_iniciaisOrderByRelevanceFieldEnum = {
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge'
};

exports.Prisma.educacao_taxa_distorcaoOrderByRelevanceFieldEnum = {
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge'
};

exports.Prisma.equilibrio_previdenciarioOrderByRelevanceFieldEnum = {
  nome_ibge: 'nome_ibge',
  uf_sigla: 'uf_sigla'
};

exports.Prisma.fiscal_autonomiaOrderByRelevanceFieldEnum = {
  nome_ibge: 'nome_ibge'
};

exports.Prisma.fiscal_gasto_pessoalOrderByRelevanceFieldEnum = {
  nome_ibge: 'nome_ibge'
};

exports.Prisma.fiscal_investimentoOrderByRelevanceFieldEnum = {
  nome_ibge: 'nome_ibge'
};

exports.Prisma.fiscal_liquidezOrderByRelevanceFieldEnum = {
  nome_ibge: 'nome_ibge'
};

exports.Prisma.planejamento_captacaoOrderByRelevanceFieldEnum = {
  municipio: 'municipio'
};

exports.Prisma.planejamento_despesaOrderByRelevanceFieldEnum = {
  municipio: 'municipio'
};

exports.Prisma.planejamento_lei_geralOrderByRelevanceFieldEnum = {
  nome_ibge: 'nome_ibge'
};

exports.Prisma.saneamento_acesso_aguaOrderByRelevanceFieldEnum = {
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge'
};

exports.Prisma.saneamento_coleta_esgotoOrderByRelevanceFieldEnum = {
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge'
};

exports.Prisma.saneamento_tratamento_esgotoOrderByRelevanceFieldEnum = {
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge'
};

exports.Prisma.saude_coberturaOrderByRelevanceFieldEnum = {
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  cobertura: 'cobertura'
};

exports.Prisma.saude_mortalidadeOrderByRelevanceFieldEnum = {
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  mortalidade: 'mortalidade',
  nascimentos: 'nascimentos'
};

exports.Prisma.saude_vacinaOrderByRelevanceFieldEnum = {
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge'
};

exports.Prisma.seguranca_homicidioOrderByRelevanceFieldEnum = {
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  dado_bruto: 'dado_bruto'
};

exports.Prisma.seguranca_transitoOrderByRelevanceFieldEnum = {
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  dado_bruto: 'dado_bruto'
};

exports.Prisma.transparencia_caucOrderByRelevanceFieldEnum = {
  nome_ibge: 'nome_ibge'
};

exports.Prisma.transparencia_indiceOrderByRelevanceFieldEnum = {
  nome_ibge: 'nome_ibge'
};

exports.Prisma.vulnerabilidade_socialOrderByRelevanceFieldEnum = {
  uf_sigla: 'uf_sigla',
  nome_ibge: 'nome_ibge',
  quantidade: 'quantidade'
};
exports.CategoriaPopulacao = exports.$Enums.CategoriaPopulacao = {
  Ate20Mil: 'Ate20Mil',
  VinteACinquentaMil: 'VinteACinquentaMil',
  CinquentaACemMil: 'CinquentaACemMil',
  AcimaDeCemMil: 'AcimaDeCemMil'
};

exports.CategoriaPIB = exports.$Enums.CategoriaPIB = {
  AbaixoDaMediana: 'AbaixoDaMediana',
  AcimaDaMediana: 'AcimaDaMediana'
};

exports.Capital = exports.$Enums.Capital = {
  S: 'S',
  N: 'N'
};

exports.Prisma.ModelName = {
  cauc: 'cauc',
  cidade_brasil: 'cidade_brasil',
  data_sources: 'data_sources',
  despesas: 'despesas',
  finbra: 'finbra',
  gabarito: 'gabarito',
  grupos_municipios: 'grupos_municipios',
  ibge_localidades: 'ibge_localidades',
  ibge_pib: 'ibge_pib',
  ibge_populacao: 'ibge_populacao',
  indicator_validation_log: 'indicator_validation_log',
  legenda_cauc: 'legenda_cauc',
  lei_geral: 'lei_geral',
  metas: 'metas',
  nomes_dataprev: 'nomes_dataprev',
  nomes_municipios: 'nomes_municipios',
  nomes_municipios_igm: 'nomes_municipios_igm',
  nomes_municipios_sebrae: 'nomes_municipios_sebrae',
  nomes_municipios_tabnet: 'nomes_municipios_tabnet',
  outliers: 'outliers',
  pib_municipios: 'pib_municipios',
  proc_logs: 'proc_logs',
  processing_logs: 'processing_logs',
  scraper_planejamento: 'scraper_planejamento',
  una: 'una',
  una_colada: 'una_colada',
  colaboradores_comissionados: 'colaboradores_comissionados',
  colaboradores_servidores: 'colaboradores_servidores',
  custo_legislativo: 'custo_legislativo',
  educacao_abandono: 'educacao_abandono',
  educacao_creches: 'educacao_creches',
  educacao_ideb_anos_finais: 'educacao_ideb_anos_finais',
  educacao_ideb_anos_iniciais: 'educacao_ideb_anos_iniciais',
  educacao_taxa_distorcao: 'educacao_taxa_distorcao',
  equilibrio_previdenciario: 'equilibrio_previdenciario',
  fiscal_autonomia: 'fiscal_autonomia',
  fiscal_gasto_pessoal: 'fiscal_gasto_pessoal',
  fiscal_investimento: 'fiscal_investimento',
  fiscal_liquidez: 'fiscal_liquidez',
  investimento_educacao: 'investimento_educacao',
  investimento_saude: 'investimento_saude',
  planejamento_captacao: 'planejamento_captacao',
  planejamento_despesa: 'planejamento_despesa',
  planejamento_lei_geral: 'planejamento_lei_geral',
  saneamento_acesso_agua: 'saneamento_acesso_agua',
  saneamento_coleta_esgoto: 'saneamento_coleta_esgoto',
  saneamento_tratamento_esgoto: 'saneamento_tratamento_esgoto',
  saude_cobertura: 'saude_cobertura',
  saude_mortalidade: 'saude_mortalidade',
  saude_vacina: 'saude_vacina',
  seguranca_homicidio: 'seguranca_homicidio',
  seguranca_transito: 'seguranca_transito',
  transparencia_cauc: 'transparencia_cauc',
  transparencia_indice: 'transparencia_indice',
  vulnerabilidade_social: 'vulnerabilidade_social'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
